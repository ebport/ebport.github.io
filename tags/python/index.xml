<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Python on Eric Porter</title>
    <link>https://ebport.github.io/tags/python/</link>
    <description>Recent content in Python on Eric Porter</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-US</language>
    <lastBuildDate>Sun, 08 Oct 2017 13:13:26 -0400</lastBuildDate>
    
	<atom:link href="https://ebport.github.io/tags/python/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>Building API Extracts with Python and Requests</title>
      <link>https://ebport.github.io/posts/python-requests-api/</link>
      <pubDate>Sun, 08 Oct 2017 13:13:26 -0400</pubDate>
      
      <guid>https://ebport.github.io/posts/python-requests-api/</guid>
      <description>Recently I have been writing a lot of code to generate flat file extracts from REST apis. This task is relatively straightforward, but can be quite time consuming if not approached in the correct manner.
In this post I have put together a simple example pipeline for quickly generating an extract using Python with the requests library. The goal is to be able to have a flat file extract ready to analyze in an hour or less.</description>
    </item>
    
    <item>
      <title>Build a Fitbit Heart Rate Extract</title>
      <link>https://ebport.github.io/posts/fitbit_data/</link>
      <pubDate>Fri, 02 Jun 2017 00:00:00 +0000</pubDate>
      
      <guid>https://ebport.github.io/posts/fitbit_data/</guid>
      <description>A Fitbit collects an incredible amount of granular data on personal activity, heart rate, and sleep. However, currently most of the detailed data is locked up within the app. This tutorial shows a simple way to extract the heart rate data in an automated fashion.
This code will generate &amp;lsquo;personal data extracts&amp;rsquo; according to simple specifications, without requiring any copy pasting or manual effort beyond the initial configuration.
Many others have posted helpful tutorials on this topic.</description>
    </item>
    
  </channel>
</rss>